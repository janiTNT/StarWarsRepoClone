Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	//IDs
	ID = SW.reactor_tiny
	OtherIDs = [reactor_small1,SW.reactor_small1]

	//StringKeys
	NameKey = "Parts/SW_TinyReactor"
	IconNameKey = "Parts/SW_TinyReactorIcon"
	DescriptionKey = "Parts/SW_TinyReactorDesc"

	//Groups&Categories
	EditorGroups = ["Power", "SWTechI"]
	TypeCategories = [reactor, provides_power, SW_Reactor_Tiny, SW_Tech_I]
	//RequiresCategories = []

	//Resoures&Size&Health
	Resources
	[
		[SW.durasteel, 8]
		[steel, 8]
		[coil, 20]
		[enriched_uranium, 2]
	]
	Size = [1, 1]
	MaxHealth = 1000

	//Selections
	SelectionPriority = 0
	//SelectionTypeByRotation = true
	IgnoreRotationForMirroredSelection = true
	SelectionTypeID = "reactors"

	//PartSpecific
	AIValueFactor = 5
	IsRotateable = false
	AutoDoorMaxPathLength = 5
	CreateUnderlyingWhenDestroyed = false

	//ReceivableBuffs&Prohibits
	ReceivableBuffs : ^/0/ReceivableBuffs []

	//Editor
	EditorIcon
	{
		Texture
		{
			File = "../reactor_small/icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}

	//Components&Inheritance
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [True]
			Mode = All
		}
		True
		{
			Type = StaticToggle
			ToggleOn = "true"
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000
			StartingResources = &MaxResources
			SuppliesResources = true
			MinResourcesPickUp = 500
			MaxResourcesPickUp = 1000
			InitPickUp = 500
			PickUpRate = 500 / 1.0
			ExpectedResourceGenerationRate = (&../BatteryProducer/ToQuantity) / (&../BatteryProducer/Interval)
			ToggleOnResources = 500
			ToggleOffResources = (&ToggleOnResources)-1
		}
		BatteryProducer
		{
			Type = ResourceConverter
			ToStorage = BatteryStorage
			ToQuantity = 500
			Interval = .6666
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../reactor_small/floor_on1.png"
							"../reactor_small/floor_on2.png"
							"../reactor_small/floor_on3.png"
							"../reactor_small/floor_on4.png"
							"../reactor_small/floor_on5.png"
							"../reactor_small/floor_on6.png"
							"../reactor_small/floor_on7.png"
							"../reactor_small/floor_on8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095*(&~/Scale)
					}
					{
						AnimationFiles
						[
							"../reactor_small/floor_on1_33.png"
							"../reactor_small/floor_on2_33.png"
							"../reactor_small/floor_on3_33.png"
							"../reactor_small/floor_on4_33.png"
							"../reactor_small/floor_on5_33.png"
							"../reactor_small/floor_on6_33.png"
							"../reactor_small/floor_on7_33.png"
							"../reactor_small/floor_on8_33.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095*(&~/Scale)
					}
					{
						AnimationFiles
						[
							"../reactor_small/floor_on1_66.png"
							"../reactor_small/floor_on2_66.png"
							"../reactor_small/floor_on3_66.png"
							"../reactor_small/floor_on4_66.png"
							"../reactor_small/floor_on5_66.png"
							"../reactor_small/floor_on6_66.png"
							"../reactor_small/floor_on7_66.png"
							"../reactor_small/floor_on8_66.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.095*(&~/Scale)
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "../reactor_small/reactor.png"
						Size = [1, 1]
					}
					{
						File = "../reactor_small/reactor_33.png"
						Size = [1, 1]
					}
					{
						File = "../reactor_small/reactor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../reactor_small/lights1.png"
							"../reactor_small/lights2.png"
							"../reactor_small/lights3.png"
							"../reactor_small/lights4.png"
							"../reactor_small/lights5.png"
							"../reactor_small/lights6.png"
							"../reactor_small/lights7.png"
							"../reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075*(&~/Scale)
					}
					{
						AnimationFiles
						[
							"../reactor_small/lights1.png"
							"../reactor_small/lights2.png"
							"../reactor_small/lights3.png"
							"../reactor_small/lights4.png"
							"../reactor_small/lights5.png"
							"../reactor_small/lights6.png"
							"../reactor_small/lights7.png"
							"../reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075/1.75*(&~/Scale)
					}
					{
						AnimationFiles
						[
							"../reactor_small/lights1.png"
							"../reactor_small/lights2.png"
							"../reactor_small/lights3.png"
							"../reactor_small/lights4.png"
							"../reactor_small/lights5.png"
							"../reactor_small/lights6.png"
							"../reactor_small/lights7.png"
							"../reactor_small/lights8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075/2.5*(&~/Scale)
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../reactor_small/roof.png"
						NormalsFile = "../reactor_small/roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "../reactor_small/roof_33.png"
						NormalsFile = "../reactor_small/roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "../reactor_small/roof_66.png"
						NormalsFile = "../reactor_small/roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		ReactorHum
		{
			Type = ContinuousEffects
			Location = [0.5, 0.5]
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/reactor_small/operating.wav"
					Volume = .5
					Speed = .75
					MaxConcurrent = 1
					DynamicVolume : ^/0/DynamicVolume
					{
						ExteriorVolume = .5*(&~/Scale)
					}
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [0.5, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			Round = Down
			ResourceLevels
			[
				{
					File = "../reactor_small/batteries4.png"
					Size = [1, 1]
				}
				{
					File = "../reactor_small/batteries8.png"
					Size = [1, 1]
				}
			]
		}

		DestroyedEffects = &<./data/ships/terran/reactor_small/reactor_small.rules>/Part/Components/DestroyedEffects

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [0.5, 0.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../reactor_small/blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		PowerGeneration = (&~/Part/Components/BatteryProducer/ToQuantity) / (&~/Part/Components/BatteryProducer/Interval) / 1000
		BatterySize = (&~/Part/Components/BatteryStorage/MaxResourcesPickUp) / 1000
		BatteryFillTime = 1000 / (&~/Part/Components/BatteryStorage/PickUpRate)
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	}
}
Size = Tiny
Scale = (1/4)