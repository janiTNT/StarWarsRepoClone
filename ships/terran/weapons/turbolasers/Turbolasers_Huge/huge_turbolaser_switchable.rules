Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	//IDs
	ID = SW.turbolaser_large_base
	//OtherIDs = [name1,name2]

	//StringKeys
	NameKey = "Parts/TurbolaserHuge"
	IconNameKey = "Parts/TurbolaserHugeIcon"
	DescriptionKey = "Parts/TurbolaserHugeDesc"

	//Groups&Categories
	EditorGroups = ["WeaponsEnergy", "SWTechIII"]
	TypeCategories = [weapon, uses_power, is_crewed]
	RequiresCategories = [SW_Bridge]

	//Resources&Size&Health
	Resources
	[
		[SW.durasteel, 400]
		[steel, 264]
		[coil, 132]
		[coil2, 44]
	]
	Size = [10, 10]
	MaxHealth = 168000

	//Rects
	GenerateRectCollider = true
	//Density = 1 + (&~/Part/TurretDensity)
	/*
	ProhibitRects
	[
		[tall, [0, -1, 2, 1]]
	]
	*/

	//Selections
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "turbolasers"

	//PartSpecific
	AIValueFactor = 2
	InitialPenetrationResistance = 10

	//ReceivableBuffs&Prohibits
	ReceivableBuffs : ^/0/ReceivableBuffs []
	//ProhibitedBy : ^/0/ProhibitedBy [tall]

	//Doors&Etc
	AutoDoorMaxPathLength = 8
	MaxDoors = 3
	AllowedDoorLocations
	[
		[-1, 1]
		[-1, 2]
		[-1, 3]
		[-1, 4]
		[-1, 5]
		[-1, 6]
		[-1, 7]
		[-1, 8]
		[10, 1]
		[10, 2]
		[10, 3]
		[10, 4]
		[10, 5]
		[10, 6]
		[10, 7]
		[10, 8]
		[1, -1]
		[2, -1]
		[3, -1]
		[4, -1]
		[5, -1]
		[6, -1]
		[7, -1]
		[8, -1]
		[1, 10]
		[2, 10]
		[3, 10]
		[4, 10]
		[5, 10]
		[6, 10]
		[7, 10]
		[8, 10]
	]

	//Editor
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [48, 60]
	}

	//Components&Inheritance
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 14
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		FireAlternatingToggle
		{
			Type = UIToggle
			ToggleID = "fire_alternating"
			Default = 0
			AvailableChoices = [0]
		}

		CommonReloadTimer
		{
			Type = Timer
			Duration = 2.1
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonOnShootEffectTimer
		{
			Type = Timer
			Duration = 0.42
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}

		SwitchWeaponCooldownProgressBar
		{
			Type = ProgressBar
			OperationalToggle = SwitchWeaponCooldownTimer
			InvertOperationalToggle = true
			ShowProgressFor = SwitchWeaponCooldownTimer
			Invert = true
			LowColor = [16, 16, 16]
			HighColor = [255, 255, 255]
		}
		SwitchWeaponCooldownTimer
		{
			Type = Timer
			Duration = 6.3
			AutoStart = true
			Repeats = false
			StartsOn = 0
			StartTrigger = SwitchWeaponCooldownTrigger
		}
		SwitchWeaponCooldownTrigger
		{
			Type = ModeTrigger
			Mode = MunitionType
			TriggerInModes = [0, 1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			Components = &<huge_turbolaser_red.rules>/Components
		}
		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		BlueMunitionComponents
		{
			Type = ToggledComponents
			Toggle = BlueMunitionToggle
			Components = &<huge_turbolaser_blue.rules>/Components
		}
		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}
		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			Components = &<huge_turbolaser_green.rules>/Components
		}

		ExteriorType
		{
			Type = UIToggle
			ToggleID = "SW.exterior_type"
			Default = 0
			AvailableChoices = [0, 1]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		WhiteExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 0
		}

		WhiteExteriorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteExteriorToggle
			IncludeInBlueprints = false
			Components = &<huge_turbolaser_white.rules>/Components
		}

		GreyExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 1
		}
		GreyExteriorComponents
		{
			Type = ToggledComponents
			Toggle = GreyExteriorToggle
			IncludeInBlueprints = false
			Components = &<huge_turbolaser_grey.rules>/Components
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000 //7680 //for 12 times firing(24shots) //1x2 has 4000 //2x3 has 10000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [5, 5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [10, 10]
					}
					{
						File = "floor_33.png"
						Size = [10, 10]
					}
					{
						File = "floor_66.png"
						Size = [10, 10]
					}
				]
			}
	
		ConsoleGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			//Location = [5, 5]
			Rotation = 90d
			OperationalToggle = IsOperational
			//DoodadToggle = IsOperational
			//ShowToggledDoodadsWhenNotOperational = true
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [10, 10]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "lights_add"
				Offset = [0.015625, 0.359375]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"A1.png"
							"A2.png"
							"A3.png"
							"A4.png"
							"A5.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.075
						AnimationStartTime = Zero
					}
				]
			}
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [10, 10]
					}
					{
						File = "walls.png"//"walls_33.png"
						Size = [10, 10]
					}
					{
						File = "walls.png"//"walls_66.png"
						Size = [10, 10]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [10, 10]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [10, 10]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [10, 10]
					}
				]
			}
			/*
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [2, 2]
						Z = 1.30 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [192, 192, 192] // [6, 57, 113]
					}
				]
			}
			*/
		}
/*
		TurretGhostGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0.5, 0]
			Rotation = 90d
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "WeaponSprite/barrel_shadow_5.png"
						Size = [2.4, 3]
					}
				]
			}
		}
*/
		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimer, SwitchWeaponCooldownTimer, FireModeToggle]
			Mode = All
		}

		Turret : &~/TurretBase
		{

		}

		BulletEmitterBase : &~/BulletEmitterBase
		{
			FireTrigger
		}

		TurretCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[-0.5, -0.5]
				[0.5, -0.5]
				[0.45, 0.8]
				[-0.45, 0.8]
			]
			Location = &~/TurretBase/Location
			//IsHigh = true
		}

		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Turret]
		}

		ChargeEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/SW_SOUNDS/LaserReCharge
			]
		}

		FireEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Location = [1, 0]
			Trigger = Turret
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/SW_SOUNDS/TurbolaserSFX
			]
		}

		TurretLocationProxy
		{
			Type = ChainableProxy
			ComponentID = Turret
		}

		CrewLocation1
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [2.25, -1.265625] //-81,-144
			//Rotation = 0d
		}
		CrewLocation2
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [2.25, 1.265625]
			//Rotation = 180d
		}
		CrewLocation3
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [0.671875, -1.78125] //-114,-43
			//Rotation = 90d
		}
		CrewLocation4
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [0.671875, 1.78125] //
			//Rotation = 90d
		}
		CrewLocation5
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [2.734375, -3.4375] //-220,-175
			//Rotation = 90d
		}
		CrewLocation6
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [2.734375, 3.4375]
			//Rotation = 90d
		}
		CrewLocation7
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [1.8125, -1.75] //-112,-116
			//Rotation = 180d
		}
		CrewLocation8
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [1.8125, 1.75]
			//Rotation = 0d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 8
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[5, 5] //&../../CrewLocation1/Location
				[5, 5] //&../../CrewLocation2/Location
				[5, 5] //&../../CrewLocation3/Location
				[5, 5] //&../../CrewLocation4/Location
				[5, 5] //&../../CrewLocation5/Location
				[5, 5] //&../../CrewLocation6/Location
				[5, 5] //&../../CrewLocation7/Location
				[5, 5] //&../../CrewLocation8/Location
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
				CrewLocation3
				CrewLocation4
				CrewLocation5
				CrewLocation6
				CrewLocation7
				CrewLocation8
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			ChainedTo = Turret
			Location = [0, -3]
			Rotation = 90d
			ResourceStorage = BatteryStorage
			Layer = "lights_add"
			//RangeLow = 0
			//RangeHigh = 24000
			ResourceLevels
			[
				{
					File = "b1.png"
					Size = [4, 6]
				}
				{
					File = "b2.png"
					Size = [4, 6]
				}
				{
					File = "b3.png"
					Size = [4, 6]
				}
				{
					File = "b4.png"
					Size = [4, 6]
				}
				{
					File = "b5.png"
					Size = [4, 6]
				}
				{
					File = "b6.png"
					Size = [4, 6]
				}
				{
					File = "b7.png"
					Size = [4, 6]
				}
				{
					File = "b8.png"
					Size = [4, 6]
				}
				{
					File = "b9.png"
					Size = [4, 6]
				}
				{
					File = "b10.png"
					Size = [4, 6]
				}
				{
					File = "b11.png"
					Size = [4, 6]
				}
				{
					File = "b12.png"
					Size = [4, 6]
				}
				{
					File = "b13.png"
					Size = [4, 6]
				}
				{
					File = "b14.png"
					Size = [4, 6]
				}
				{
					File = "b15.png"
					Size = [4, 6]
				}
				{
					File = "b16.png"
					Size = [4, 6]
				}
			]
		}
		BatterySprites2
		{
			Type = ResourceSprites
			ChainedTo = Turret
			Location = [0, 3]
			Rotation = 90d
			ResourceStorage = BatteryStorage
			Layer = "lights_add"
			//RangeLow = 1000
			//RangeHigh = 25000
			ResourceLevels
			[
				{
					File = "b1.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b2.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b3.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b4.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b5.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b6.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b7.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b8.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b9.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b10.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b11.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b12.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b13.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b14.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b15.png"
					Size = [4, 6]
					MirrorU = true
				}
				{
					File = "b16.png"
					Size = [4, 6]
					MirrorU = true
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [5, 5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [5, 5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [5, 5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints01.png"
			Size = [5, 10]
			Offset = [-2.5, 0]
		}
		Blueprints2
		{
			Type = BlueprintSprite
			File = "blueprints01.png"
			Size = [5, 10]
			Offset = [2.5, 0]
			MirrorU = true
		}
	}

   //Stats
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&~/TurretStats/Stats/PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
	StatsByCategory
	[
		&~/TurretStats
		&<huge_turbolaser_red.rules>/LaserStats
		&<huge_turbolaser_blue.rules>/LaserStats
		&<huge_turbolaser_green.rules>/LaserStats
	]
}
TurretStats
{
	NameKey = "StatCategories/Turret"
	Stats
	{
		Barrels = 2
		ReloadTime = &~/Part/Components/CommonReloadTimer/Duration
		Salvo = [&../Barrels, &../ReloadTime]
		ROF = (&Barrels) / (&~/Part/Components/CommonReloadTimer/Duration)
		Range = &~/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/TurretBase/FiringArc)
		TurretSpeed = deg(&~/TurretBase/RotateSpeed)
		PowerPerShot = (&~/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * (&ROF)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
		Spread = deg(&~/BulletEmitterBase/Spread/1)
		//ShotSpeed = &~/Components/BulletEmitterBase/Bullet/Speed
	}
}
OperationalRoofLightingBase
{
	Size = [5.0, 5.6] //X+0,6(Distance between Barrels)=Y
	Z = 1.65 // Controls the "height" of the light for the purposes of normal mapping.
}
BulletEmitterBase
{
	Type = BulletEmitter
	ChainedTo = TurretLocationProxy
	FireTrigger = CommonReloadResetTriggerProxy
	GetTargetFrom = Turret
	//No Location is dual barrel
	OperationalToggle = IsOperational
	FireDelay = 0.6
	ResourceStorage = BatteryStorage
	ResourcesUsed = 620
	Bullet = &/SW_SHOTS/turretturbolasermediumlaserredshot
	Recoil = 250
	Spread = [-1d, 1d]
	TargetLeadPrediction = false
}
ReloadProgressBarBase
{
	Type = ProgressBar
	OperationalToggle = SwitchWeaponCooldownTimer
	ShowProgressFor = CommonReloadTimer
	Invert = true
}
TurretBase
		{
			Type = TurretWeapon
			Location = [5, 5]
			Rotation = -90d
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 0 // Uses separate common fire timer.
			FiringArc = 160d
			RotateSpeed = 8d
			FireThresholdAngle = 2d
			AIFirepowerRating = 6400
			//CanBeGivenExplicitTarget = true
			//TargetSearchesPerSecond = 4
			Emitter = BulletEmitterBase
			FirePermissionToggle = FirePermissionToggle
			HoldTargetAfterCancel = 0.05
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLOSChecks = false
			IgnoreSourceShipLowLOSChecks = true
			AllowFireWithBlockedLOS = false

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}
