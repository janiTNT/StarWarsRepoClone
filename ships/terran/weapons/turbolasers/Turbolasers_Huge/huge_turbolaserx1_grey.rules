Components
	{
		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			//OperationalToggle = IsOperational
			Floor
			{
				Layer = "turrets"
				Offset = [0, -0.5]
				DamageLevels
				[
					{
						File = "turretinside.png"
						Size = [10, 9]
					}
				]
			}
			Roof
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "turret_gray.png"
						Size = [10, 10]
					}
				]
			}
		}
		BarrelGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			//OperationalToggle = IsOperational

			Floor //Center
			{
				Layer = "roof_turrets"
				Offset = [0.046875, -7.21875] //-3,-462
				DamageLevels
				[
					{
						File = "barrel[1,5]huge01.png"
						Size = [1, 5]
					}
				]
			}
			/*
			Walls
			{
				Layer = "roof_turrets"
				Offset = [-1.59375, -7.171875] //-102, -459
				DamageLevels
				[
					{
						File = "barrel[1,5]huge01.png"
						Size = [1, 5]
					}
				]
			}
			Roof
			{
				Layer = "roof_turrets"
				Offset = [1.59375, -7.171875] //102, -459
				DamageLevels
				[
					{
						File = "barrel[1,5]huge01.png"
						Size = [1, 5]
						MirrorU = true
					}
				]
			}
			*/
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [10, 10]
					}
				]
			}
		}
		/*
		WeaponSprite
		{
			Type = Sprite
			ChainedTo = TurretLocationProxy
			Location = [0, 0]
			Rotation = 90d
			Layer = "roof_turrets"
			ResetAnimationTrigger = CommonReloadResetTriggerProxy
			AtlasSprite
			{
				AnimationFiles
				[
					"WeaponSprite/Barrel_B2.png"
					"WeaponSprite/Barrel_B3.png"
					"WeaponSprite/Barrel_B1.png" // Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					"WeaponSprite/barrel_A2_normals2.png"
					"WeaponSprite/Barrel_A3_normals2.png"
					"WeaponSprite/barrel_A1_normals2.png"
				]
				Size = [2.4, 3]
				AnimationInterval = 0.25
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}
		*/
	}