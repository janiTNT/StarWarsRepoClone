Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = LocationToWorldSpace
			LocationIn = location
			LocationOut = location
			Name = "Convert location to world space."
			Enabled = true
			UpdateAfterInit = false
		}
//		{
//			Type = SetRandom
//			DataOut = rot
//			ValueType = Angle
//			FromValue = 0d
//			ToValue = 360d
//			Name = "Random Rotation"
//			Enabled = true
//			UpdateAfterInit = false
//		}
		{
			Type = AddFrameOfReference
			VelocityInOut = velocity
			Name = "Add frame of reference"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = base_scale
			ValueType = Float
			FromValue = 9
			ToValue = 11
			Name = "Random Scale"
			Enabled = true
			UpdateAfterInit = false
		}
//		{
//			Type = ScaleFromIntensity
//			ScaleOut = scale
//			ScaleFactor = 2
//			IntensityExponent = 0.5
//			Name = "Scale from intensity"
//			Enabled = true
//			UpdateAfterInit = false
//		}
		{
			Type = ScaleToWorldSpace
			ScaleIn = base_scale
			ScaleOut = base_scale
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
//		{
//			Type = SetRandom
//			DataOut = lifetime
//			ValueType = Float
//			FromValue = 1.2
//			ToValue = 4
//			Name = "random lifetime"
//			Enabled = true
//			UpdateAfterInit = false
//		}
//		{
//			Type = RotationToWorldSpace
//			RotationIn = rot
//			RotationOut = rot
//			Name = ""
//			Enabled = true
//			UpdateAfterInit = false
//		}
	]
	Updaters
	[
		{
			Type = Lifetime
			LifeInOut = life
			Lifetime = 1.5
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
		}
//		{
//			Type = VariableLifetime
//			LifeInOut = life
//			LifetimeIn = lifetime
//			Name = ""
//			Enabled = true
//			UpdateAfterInit = false
//		}
		{
			Type = Operator
			DataType = Vector2
			AIn = location
			BIn = velocity
			ResultOut = location
			Operator = AddDt
			Name = "Apply velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = UvAnimation
			TimeIn = life
			UvRectOut = uv_rect
			Framerate = 32//16
			TextureSize
			{
				X = 1024
				Y = 1024
			}
			FrameSize
			{
				X = 256
				Y = 256
			}
			FrameCount = 16
			FramesPerRow = 4
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Looping = false
			Name = ""//Animation
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = ColorRamp
			LerpIn = life
			ColorOut = color
			Invert = false
			Colors
			[
            	{
            	    Rf = 0.7  // Purple has red and blue predominant
            	    Gf = 0.3
            	    Bf = 1.0
            	    Af = 1.0  // Full alpha
            	}
            	{
            	    Rf = 0.5
            	    Gf = 0.3
            	    Bf = 1.0
            	    Af = 0.7  // Slightly transparent
            	}
            	{
            	    Rf = 0.2
            	    Gf = 0.2
            	    Bf = 0.8
            	    Af = 0.3  // More transparent
            	}
            	{
            	    Rf = 0.2
            	    Gf = 0.2
            	    Bf = 0.8
            	    Af = 0  // Invisible
            	}
			]
			Name = "Color ramp"
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = Lerp
			LerpIn = life
			DataOut = scale
			Invert = false
			ValueType = Float
			FromValue = 0.75
			ToValue = 1.8
			Name = "scale lerp"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Float
			AIn = scale
			BIn = base_scale
			ResultOut = scale
			Operator = Multiply
			Name = "apply base scale"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ParticleLightNormal
			LocationIn = location
			LightNormalOut = light_normal
			Name = "Light normal"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Renderer
	{
		Type = LitQuadRenderer
		LightNormalIn = light_normal
		DiffuseShader
		NormalsShader
		{
			File = ./data/common_effects/particles/particle_normals.shader
		}
		LocationIn = location
		ScaleIn = scale
		Scale2In
		RotationIn = rot
		ColorIn = color
		UvRectIn = uv_rect
		BaseSize
		{
			X = .75 //3//5
			Y = .75 //3//5
		}
		Offset
		{
			X = 0
			Y = 0
		}
		Name = ""
	}
	Material
	{
		Shader
		{
			File = ./data/common_effects/particles/particle_lit_additive.shader
		}
/*
		_normalsTexture
		{
			File = ion_explosion_hit_normals.png
			MipLevels = max
			SampleMode = Linear
		}
*/
		Texture
		{
			File = "ion_explosion_discharge.png" // ./Data/shots/bullet_large/particles/bullet_hit_large.png
			MipLevels = 9
			SampleMode = Linear
		}
	}
	DeleteMode = KeepOrder
	EnableMultithreading = false
	InitCapacity = 192
}
EmitterDef
{
	EmitPerSecond = 0
	EmitPerOneShot
	{
		Min = 1//4
		Max = 1//8
	}
	PreInitializers
	[
		{
			Type = AssignIndex
			IndexOut = index
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = RandomRotationByIndex
			RotationInOut = rot
			SafetyMargin = 15d
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = location
			ValueType = Vector2
			FromValue
			{
				X = -0.1
				Y = -0.1
			}
			ToValue
			{
				X = 0.1
				Y = 0.1
			}
			Name = "Random Position"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	PostInitializers[]
}
Bucket = NukeHit
UseRealTime = false
PenetratingBucket = Middle2
MinIntensity = 0
IsFancy = false
IsFancyLight = false
IsSimple = false
Sharing = Global
UnsharedRenderInWorldSpace = false
DontEmitWhenOffScreen = false
DontEmitWhenOffScreenSizeInflate = 3
UseCustomShapeForOffScreenCheck = false
MaxEmissionZoom = 30
ScaleEmissionWithIntensity = false
ScaleEmissionWithBeamLength = false
ScaleEmissionWithWorldVelocity = false
ScaleEmissionWithPartSize = false
ScaleEmissionWithPartPhysicalSize = false
CaptureBackBuffer = false
Filter
{
	Ships = true
	OperationalHealth = true
	StructuralHealth = true
	OnlyPartCategories
	ExcludePartCategories
	Shields = true
	Bullets = true
	OnlyBulletCategories
	ExcludeBulletCategories
	Crew = true
	Nuggets = true
	IgnoreInvulnerability = true
	Self
	TargetedSelf
	Friendlies = true
	TargetedFriendlies
	Enemies = true
	TargetedEnemies
	Junk = true
	TargetedJunk
}
Delay = 0
IgnoreIntensity = false
